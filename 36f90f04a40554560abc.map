{"version":3,"sources":["/Users/zhangyewei/Documents/React-Native/AwesomeMovie/src/mockdata/data.js","/Users/zhangyewei/Documents/React-Native/AwesomeMovie/src/mockdata/Assets.js","/Users/zhangyewei/Documents/React-Native/AwesomeMovie/src/components/PosterImage.js","/Users/zhangyewei/Documents/React-Native/AwesomeMovie/src/screens/Home.js","/Users/zhangyewei/Documents/React-Native/AwesomeMovie/src/screens/Tickets.js","/Users/zhangyewei/Documents/React-Native/AwesomeMovie/src/screens/Profile.js","/Users/zhangyewei/Documents/React-Native/AwesomeMovie/App.js","/Users/zhangyewei/Documents/React-Native/AwesomeMovie/web-build/register-service-worker.js","/Users/zhangyewei/Documents/React-Native/AwesomeMovie/src/assets/posters/1_jojorabbit.jpg","/Users/zhangyewei/Documents/React-Native/AwesomeMovie/src/assets/posters/2_parasite.jpg"],"names":["movieList","posters","jojoRabbit","require","parasite","PosterImage","View","style","styles","moviePosterWrapper","Animated","Image","moviePoster","transform","scale","this","props","imageScale","opacity","imageOpacity","source","poster","Component","StyleSheet","create","marginTop","marginBottom","height","hp","width","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","alignItems","overflow","shadowOffset","shadowColor","shadowOpacity","shadowRadius","elevation","flex","resizeMode","justifyContent","windowWidth","wp","Home","_renderMovie","item","i","inputRange","_scrollX","interpolate","outputRange","key","id","contentWrapper","Assets","_renderCircle","posterPrimaryColor","posterSecondaryColor","Text","font","title","normalText","rating","runtimeMinutes","displayText","averageRating","color1","color2","movie","rotate","translateX","bgLinearGradientCircle","translateY","x1","y1","x2","y2","offset","stopColor","stopOpacity","cx","cy","r","fill","Value","container","ScrollView","pagingEnabled","scrollEventThrottle","horizontal","onScroll","event","nativeEvent","contentOffset","x","useNativeDriver","contentContainerStyle","scrollViewContainer","map","flexGrow","backgroundColor","scrollViewContainier","fontFamily","color","metaContainer","padding","fontSize","fontWeight","marginVertical","textAlign","position","top","left","zIndex","Tickets","Profile","enableScreens","drawer","createDrawerNavigator","initialRouteName","drawerPosition","App","createAppContainer","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"mnCAEeA,E,eCFA,GACbC,QAAS,CACPC,WAAYC,EAAQ,KACpBC,SAAUD,EAAQ,OCIDE,E,yIAEjB,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOC,qBACnB,kBAACC,EAAA,EAASC,MAAV,CACEJ,MAAO,CACLC,EAAOI,YACP,CACEC,UAAW,CACT,CACEC,MAAOC,KAAKC,MAAMC,aAGtBC,QAASH,KAAKC,MAAMG,eAGxBC,OAAQL,KAAKC,MAAMK,c,GAhBYC,aAuBnCd,EAASe,IAAWC,OAAO,CAC/Bf,mBAAoB,CAClBgB,UAAW,GACXC,aAAc,GACdC,OAAQC,YAAG,OACXC,MAAoB,EAAZD,YAAG,OAAc,EAEzBE,oBAAqBF,YAAG,MACxBG,qBAAsBH,YAAG,MACzBI,uBAAwBJ,YAAG,MAC3BK,wBAAyBL,YAAG,MAC5BM,WAAY,SACZC,SAAU,SAEVC,aAAc,CAAEP,MAAO,EAAGF,OAAQ,GAClCU,YAAa,UACbC,cAAe,GACfC,aAAc,GACdC,UAAW,GAEb5B,YAAa,CACX6B,KAAM,EACNZ,MAAoB,EAAZD,YAAG,OAAc,EACzBc,WAAY,UACZR,WAAY,SACZS,eAAgB,Y,QC5CdC,EAAcC,YAAG,QAEFC,E,mLAiCnBC,aAAe,SAACC,EAAMC,GACpB,IAAMC,EAAa,EAChBD,EAAI,GAAKL,GACTK,EAAI,GAAKL,EACVK,EAAIL,EACJK,EAAI,EAAIL,GAGJ3B,EAAa,EAAKkC,SAASC,YAAY,CAC3CF,aACAG,YAAa,CAAC,EAAG,GAAK,EAAG,MAGrBlC,EAAe,EAAKgC,SAASC,YAAY,CAC7CF,aACAG,YAAa,CAAC,EAAG,GAAK,EAAG,MAG3B,OACE,kBAAC/C,EAAA,EAAD,CAAMgD,IAAKN,EAAKO,GAAIhD,MAAO,CAACC,EAAOgD,iBACjC,kBAAC,EAAD,CACEnC,OAAQoC,EAAOxD,QAAQ+C,EAAK3B,QAC5BJ,WAAYA,EACZE,aAAcA,IAEf,EAAKuC,cACJV,EAAKW,mBACLX,EAAKY,qBACLZ,EAAK3B,OACL6B,GAEF,kBAACxC,EAAA,EAASJ,KAAV,CAAeC,MAAO,CAAC,CAAEW,QAASC,KAChC,kBAAC0C,EAAA,EAAD,CAAMtD,MAAO,CAACC,EAAOsD,KAAMtD,EAAOuD,QAASf,EAAKe,OAChD,kBAACF,EAAA,EAAD,CAAMtD,MAAO,CAACC,EAAOsD,KAAMtD,EAAOwD,aAAchB,EAAKiB,QACrD,kBAACJ,EAAA,EAAD,CAAMtD,MAAO,CAACC,EAAOsD,KAAMtD,EAAOwD,aAC/BhB,EAAKkB,gBAER,kBAACL,EAAA,EAAD,CAAMtD,MAAO,CAACC,EAAOsD,KAAMtD,EAAO2D,cAC/BnB,EAAKoB,kB,EAMhBV,cAAgB,SAACW,EAAQC,EAAQC,EAAOrB,GACtC,IAAMsB,EAAS,EAAKrB,SAASC,YAAY,CACvCF,aACAG,YAAa,CAAC,OAAQ,SAAU,OAAQ,WAEpCoB,EAAa,EAAKtB,SAASC,YAAY,CAC3CF,aACAG,YAAa,EAAE,IAAKT,GAAc,KAAMA,KAEpC1B,EAAU,EAAKiC,SAASC,YAAY,CACxCF,aACAG,YAAa,CAAC,EAAG,EAAG,EAAG,KAEnBvC,EAAQ,EAAKqC,SAASC,YAAY,CACtCF,aACAG,YAAa,CAAC,IAAK,GAAK,IAAK,MAG/B,OACE,kBAAC3C,EAAA,EAASJ,KAAV,CACEC,MAAO,CACLC,EAAOkE,uBACP,CACE7D,UAAW,CACT,CACE2D,UAEF,CACEC,cAEF,CACEE,YAAa,KAEf,CACE7D,UAGJI,aAIJ,kBAAC,IAAD,CACES,OAAQC,YAAG,QACXC,MAAOD,YAAG,SAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgB2B,GAAIgB,EAAOK,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACjD,kBAAC,IAAD,CAAMC,OAAO,IAAIC,UAAWZ,EAAQa,YAAY,MAChD,kBAAC,IAAD,CAAMF,OAAO,IAAIC,UAAWX,EAAQY,YAAY,QAGpD,kBAAC,IAAD,CACEC,GAAIvD,YAAG,OACPwD,GAAIxD,YAAG,OACPyD,EAAGzD,YAAG,OACN0D,KAAI,QAAUf,EAAV,S,EAMdpB,SAAW,IAAIzC,IAAS6E,MAAM,G,wDA1IpB,IAAD,OACP,OACE,kBAACjF,EAAA,EAAD,CAAMC,MAAOC,EAAOgF,WAelB,kBAAC9E,EAAA,EAAS+E,WAAV,CACEC,eAAa,EACbC,oBAAqB,GACrBC,YAAU,EACVC,SAAUnF,IAASoF,MACjB,CAAC,CAAEC,YAAa,CAAEC,cAAe,CAAEC,EAAGlF,KAAKoC,aAC3C,CAAE+C,iBAAiB,IAErBC,sBAAuB3F,EAAO4F,qBAE7BpG,EAAUqG,KAAI,SAACrD,EAAMC,GAAP,OAAa,EAAKF,aAAaC,EAAMC,Y,GA5B5B3B,aA8I5Bd,EAASe,IAAWC,OAAO,CAC/BgE,UAAW,CACTc,SAAU,EACVC,gBAAiB,WAEnBC,qBAAsB,CACpBtE,WAAY,SACZS,eAAgB,UAElBa,eAAgB,CACd8C,SAAU,EACV3E,OAAQC,YAAG,QACXC,MAAOgB,YAAG,QACVX,WAAY,UAGd4B,KAAM,CACJ2C,WAAY,YACZC,MAAO,QAETC,cAAe,CACbzE,WAAY,SACZS,eAAgB,WAChB4D,gBAAiB,cACjBK,QAAS,IAEX7C,MAAO,CACL8C,SAAU,GACVC,WAAY,MACZJ,MAAO,QAET1C,WAAY,CACV6C,SAAU,GACVE,eAAgB,GAChBC,UAAW,SACXN,MAAO,QAETvC,YAAa,CACX0C,SAAU,GACVC,WAAY,MACZJ,MAAO,QAEThC,uBAAwB,CACtBuC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,QAAS,KCtMQC,E,yIAEjB,OACE,kBAAC/G,EAAA,EAAD,CAAMC,MAAOC,EAAOgF,WAClB,kBAAC3B,EAAA,EAAD,yB,GAJ6BvC,aAU/Bd,EAASe,IAAWC,OAAO,CAC/BgE,UAAW,CACT/C,KAAM,EACN8D,gBAAiB,OACjBrE,WAAY,SACZS,eAAgB,YCfC2E,E,yIAEjB,OACE,kBAAChH,EAAA,EAAD,CAAMC,MAAOC,EAAOgF,WAClB,kBAAC3B,EAAA,EAAD,2B,GAJ6BvC,aAU/Bd,EAASe,IAAWC,OAAO,CAC/BgE,UAAW,CACT/C,KAAM,EACN8D,gBAAiB,OACjBrE,WAAY,SACZS,eAAgB,Y,QCXpB4E,cACA,IAAMC,EAASC,gCACb,CACE3E,OACAwE,UACAD,WAEF,CACEK,iBAAkB,OAClBC,eAAgB,SAIdC,EAAMC,6BAAmBL,GAEhBI,O,+DCpBX,kBAAmBE,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,uCAAwC,CAAEC,MAAO,mBAC1DC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,U,oBCV1DE,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC","file":"static/js/app.152237f4.chunk.js","sourcesContent":["import movieList from \"./movieList.json\";\n\nexport default movieList;\n","export default {\n  posters: {\n    jojoRabbit: require(\"../assets/posters/1_jojorabbit.jpg\"),\n    parasite: require(\"../assets/posters/2_parasite.jpg\")\n  }\n};\n","import React, { Component } from \"react\";\nimport { StyleSheet, View, Image, Animated } from \"react-native\";\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp\n} from \"react-native-responsive-screen\";\n\nexport default class PosterImage extends Component {\n  render() {\n    return (\n      <View style={[styles.moviePosterWrapper]}>\n        <Animated.Image\n          style={[\n            styles.moviePoster,\n            {\n              transform: [\n                {\n                  scale: this.props.imageScale\n                }\n              ],\n              opacity: this.props.imageOpacity\n            }\n          ]}\n          source={this.props.poster}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  moviePosterWrapper: {\n    marginTop: 97,\n    marginBottom: 50,\n    height: hp(\"60%\"),\n    width: (hp(\"60%\") * 2) / 3,\n    // Border radius\n    borderTopLeftRadius: hp(\"2%\"),\n    borderTopRightRadius: hp(\"2%\"),\n    borderBottomLeftRadius: hp(\"2%\"),\n    borderBottomRightRadius: hp(\"2%\"),\n    alignItems: \"center\",\n    overflow: \"hidden\",\n    // Image shadow\n    shadowOffset: { width: 5, height: 7 },\n    shadowColor: \"#2C2C2C\",\n    shadowOpacity: 0.1,\n    shadowRadius: 15,\n    elevation: 2\n  },\n  moviePoster: {\n    flex: 1,\n    width: (hp(\"60%\") * 2) / 3,\n    resizeMode: \"contain\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Animated, Image } from \"react-native\";\nimport movieList from \"../mockdata/data\";\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp\n} from \"react-native-responsive-screen\";\nimport Assets from \"../mockdata/Assets\";\nimport PosterImage from \"../components/PosterImage\";\nimport Svg, { Circle, LinearGradient, Defs, Stop } from \"react-native-svg\";\n\nconst windowWidth = wp(\"100%\");\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        {/* <FlatList\n          contentContainerStyle={styles.scrollViewContainier}\n          pagingEnabled={true}\n          initialScrollIndex={0}\n          bounces={false}\n          horizontal\n          style={{ flexGrow: 1 }}\n          data={movieList}\n          renderItem={({ item, i, separators }) => this._renderMovie(item, i)}\n            onScroll={Animated.event(\n              [{ nativeEvent: { contentOffset: { x: this._scrollX } } }],\n              { useNativeDriver: true }\n            )}\n        /> */}\n        <Animated.ScrollView\n          pagingEnabled\n          scrollEventThrottle={16}\n          horizontal\n          onScroll={Animated.event(\n            [{ nativeEvent: { contentOffset: { x: this._scrollX } } }],\n            { useNativeDriver: true }\n          )}\n          contentContainerStyle={styles.scrollViewContainer}\n        >\n          {movieList.map((item, i) => this._renderMovie(item, i))}\n        </Animated.ScrollView>\n      </View>\n    );\n  }\n  _renderMovie = (item, i) => {\n    const inputRange = [\n      (i - 2) * windowWidth,\n      (i - 1) * windowWidth,\n      i * windowWidth,\n      i + 2 * windowWidth\n    ];\n\n    const imageScale = this._scrollX.interpolate({\n      inputRange,\n      outputRange: [1, 0.4, 1, 0.4]\n    });\n\n    const imageOpacity = this._scrollX.interpolate({\n      inputRange,\n      outputRange: [1, 0.2, 1, 0.2]\n    });\n\n    return (\n      <View key={item.id} style={[styles.contentWrapper]}>\n        <PosterImage\n          poster={Assets.posters[item.poster]}\n          imageScale={imageScale}\n          imageOpacity={imageOpacity}\n        />\n        {this._renderCircle(\n          item.posterPrimaryColor,\n          item.posterSecondaryColor,\n          item.poster,\n          inputRange\n        )}\n        <Animated.View style={[{ opacity: imageOpacity }]}>\n          <Text style={[styles.font, styles.title]}>{item.title}</Text>\n          <Text style={[styles.font, styles.normalText]}>{item.rating}</Text>\n          <Text style={[styles.font, styles.normalText]}>\n            {item.runtimeMinutes}\n          </Text>\n          <Text style={[styles.font, styles.displayText]}>\n            {item.averageRating}\n          </Text>\n        </Animated.View>\n      </View>\n    );\n  };\n  _renderCircle = (color1, color2, movie, inputRange) => {\n    const rotate = this._scrollX.interpolate({\n      inputRange,\n      outputRange: [\"0deg\", \"-90deg\", \"0deg\", \"90deg\"]\n    });\n    const translateX = this._scrollX.interpolate({\n      inputRange,\n      outputRange: [-100, windowWidth, -100, -windowWidth]\n    });\n    const opacity = this._scrollX.interpolate({\n      inputRange,\n      outputRange: [1, 0, 1, 0]\n    });\n    const scale = this._scrollX.interpolate({\n      inputRange,\n      outputRange: [1.5, 0.5, 1.5, 0.5]\n    });\n\n    return (\n      <Animated.View\n        style={[\n          styles.bgLinearGradientCircle,\n          {\n            transform: [\n              {\n                rotate\n              },\n              {\n                translateX\n              },\n              {\n                translateY: -245\n              },\n              {\n                scale\n              }\n            ],\n            opacity\n          }\n        ]}\n      >\n        <Svg\n          height={hp(\"100%\")}\n          width={hp(\"100%\")}\n          // viewBox={`${hp(\"35%\")} ${hp(\"55%\")} ${hp(\"60%\")} ${hp(\"60%\")}`}\n        >\n          <Defs>\n            <LinearGradient id={movie} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <Stop offset=\"0\" stopColor={color1} stopOpacity=\"1\" />\n              <Stop offset=\"1\" stopColor={color2} stopOpacity=\"1\" />\n            </LinearGradient>\n          </Defs>\n          <Circle\n            cx={hp(\"50%\")}\n            cy={hp(\"50%\")}\n            r={hp(\"40%\")}\n            fill={`url(#${movie})`}\n          />\n        </Svg>\n      </Animated.View>\n    );\n  };\n  _scrollX = new Animated.Value(0);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: \"#2C2C2C\"\n  },\n  scrollViewContainier: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  contentWrapper: {\n    flexGrow: 1,\n    height: hp(\"100%\"),\n    width: wp(\"100%\"),\n    alignItems: \"center\"\n    // justifyContent: \"center\"\n  },\n  font: {\n    fontFamily: \"monospace\",\n    color: \"#222\"\n  },\n  metaContainer: {\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"transparent\",\n    padding: 15\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"700\",\n    color: \"#FFF\"\n  },\n  normalText: {\n    fontSize: 14,\n    marginVertical: 15,\n    textAlign: \"center\",\n    color: \"#FFF\"\n  },\n  displayText: {\n    fontSize: 24,\n    fontWeight: \"900\",\n    color: \"#FFF\"\n  },\n  bgLinearGradientCircle: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    zIndex: -1\n  }\n});\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nexport default class Tickets extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>My tickets!</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>Profile page!</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","import { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { createAppContainer } from \"react-navigation\";\nimport Home from \"./src/screens/Home\";\nimport Tickets from \"./src/screens/Tickets\";\nimport Profile from \"./src/screens/Profile\";\nimport { enableScreens } from \"react-native-screens\";\n\nenableScreens();\nconst drawer = createDrawerNavigator(\n  {\n    Home,\n    Profile,\n    Tickets\n  },\n  {\n    initialRouteName: \"Home\",\n    drawerPosition: \"left\"\n  }\n);\n\nconst App = createAppContainer(drawer);\n\nexport default App;\n\n// import * as React from \"react\";\n// import { createDrawerNavigator } from \"@react-navigation/drawer\";\n// import { NavigationContainer } from \"@react-navigation/native\";\n// import Home from \"./src/screens/Home\";\n// import Tickets from \"./src/screens/Tickets\";\n// import Profile from \"./src/screens/Profile\";\n\n// const Drawer = createDrawerNavigator();\n\n// export default function App() {\n//   return (\n//     <NavigationContainer>\n//       <Drawer.Navigator initialRouteName=\"Home\">\n//         <Drawer.Screen name=\"Home\" component={Home} />\n//         <Drawer.Screen name=\"My Tickets\" component={Tickets} />\n//         <Drawer.Screen name=\"My Profile\" component={Profile} />\n//       </Drawer.Navigator>\n//     </NavigationContainer>\n//   );\n// }\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/AwesomeMovie/expo-service-worker.js', { scope: '/AwesomeMovie/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/1_jojorabbit.6a19f475.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2_parasite.8294d926.jpg\";"],"sourceRoot":""}